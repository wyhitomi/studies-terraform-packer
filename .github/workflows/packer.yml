###############################################################
# 
# Github Actions
# packer.yml
# version
# 
###############################################################

name: 'Terraform'

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  terraform-create-resouce-group:
    name: 'Terraform Resource Group'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    # Checkout the repository to the GitHub Actions runner
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token 
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      # with:
      #   cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      working-directory: ./packer

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan
      working-directory: ./packer
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID}}
  
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve
      working-directory: ./packer
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID}}
  
  packer:
    needs: [terraform-create-resouce-group]
    name: 'Packer Metabase Image'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Fix Packer Template
        uses: operatehappy/packer-github-actions@master
        with:
          command: fix
          target: packer/packer.json

      - name: Validate Packer Template
        uses: operatehappy/packer-github-actions@master
        with:
          command: validate
          arguments: -syntax-only
          target: packer/packer.json
      
      - name: Build Packer Artifact
        uses: operatehappy/packer-github-actions@master
        with:
          command: build
          arguments: "-force -color=false -on-error=abort"
          target: packer/packer.json
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID}}